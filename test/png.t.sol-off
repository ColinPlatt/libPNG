// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.13;

import "ds-test/test.sol";

import {png} from '../src/png.sol';

contract PNGTest is DSTest {

    bytes3[] public palette;
    bytes picture;

    function setUp() public {
        palette.push(png.rgbToPalette(bytes1(0x00),bytes1(0x44),bytes1(0xcc)));
        palette.push(png.rgbToPalette(bytes1(0xcc),bytes1(0x00),bytes1(0x44)));
        palette.push(png.rgbToPalette(bytes1(0x00),bytes1(0xcc),bytes1(0x44)));
        
        picture = abi.encodePacked(
            bytes1(0x01), 
            bytes1(0x02),
            bytes1(0x03),
            bytes1(0x01), 
            bytes1(0x00),
            bytes1(0x00),
            bytes1(0x01), 
            bytes1(0x01),
            bytes1(0x01)
        );

    }

    function testtRNS() public {
        emit log_bytes(png.tRNS(256, 3));
        emit log_bytes(abi.encodePacked(png._CRC(png.tRNS(256, 3),4)));

    }

    function testReadPalette() public {

        emit log_uint(palette.length);
        emit log_bytes(picture);

        assertEq(bytes4(0xdb9c973e), png._CRC(png.formatPalette(palette, true),4));

        //rawPNG(uint256 width, uint256 height, bytes3[] memory palette, bytes memory pixels)
        emit log_bytes(png.rawPNG(uint32(3), uint32(3), palette, picture));
        emit log_string(png.encodedPNG(uint32(3), uint32(3), palette, picture));


    }



}